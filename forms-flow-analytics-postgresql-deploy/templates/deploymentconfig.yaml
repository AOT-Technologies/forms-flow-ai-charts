apiVersion: v1
kind: DeploymentConfig
metadata:
  generation: 1
  labels:
    app: {{ .Values.name }}-{{ .Values.instance }}
    app-group: {{ .Values.app_group }}
    template: {{ .Values.name }}-deploy
  name: {{ .Values.name }}-{{ .Values.instance }}
spec:
  replicas: 1
  selector:
    name: {{ .Values.name }}-{{ .Values.instance }}
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ .Values.name }}-{{ .Values.instance }}
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            configMapKeyRef:
              key: DATABASE_USER
              name: {{ .Values.name }}-{{ .Values.instance }}-config
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DATABASE_PASSWORD
              name: {{ .Values.name }}-{{ .Values.instance }}-secret
        - name: POSTGRESQL_DATABASE
          valueFrom:
            configMapKeyRef:
              key: DATABASE_NAME
              name: {{ .Values.name }}-{{ .Values.instance }}-config
        - name: POSTGRESQL_ADMIN_DATABASE
          valueFrom:
            secretKeyRef:
              key: DATABASE_ADMIN_PASSWORD
              name: {{ .Values.name }}-{{ .Values.instance }}-secret
        image: ' '
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
        name: {{ .Values.name }}-{{ .Values.instance }}
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
              'SELECT 1'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: {{ .Values.memory_limit }}
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: {{ .Values.name }}-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ .Values.name }}-data
        persistentVolumeClaim:
          claimName: {{ .Values.name }}-{{ .Values.instance }}
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ .Values.name }}-{{ .Values.instance }}
      from:
        kind: ImageStreamTag
        name: postgresql:10
        namespace: openshift
    type: ImageChange
  - type: ConfigChange
