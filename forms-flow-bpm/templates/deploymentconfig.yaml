apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations: null
  labels:
    app: "{{ .Values.name }}"
  name: "{{ .Values.name }}"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: "{{ .Values.name }}"
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: "{{ .Values.name }}"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - "{{ .Values.name }}"
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: APP_SECURITY_ORIGIN
          value: '*'
        - name: CAMUNDA_DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              key: DATABASE_NAME
              name: "{{ .Values.camunda_session_db_resource_name }}-{{ .Values.image_tag }}-config"
        - name: CAMUNDA_DATABASE_SERVICE_NAME
          value: "{{ .Values.camunda_db_resource_name }}-{{ .Values.image_tag }}"
        - name: CAMUNDA_JDBC_DRIVER
          value: "{{ .Values.postgre_db_driver }}"
        - name: CAMUNDA_JDBC_URL
          value: "jdbc:postgresql://${CAMUNDA_DATABASE_SERVICE_NAME}:{{ .Values.database_port }}/${CAMUNDA_DATABASE_NAME}"
        - name: WAIT_FOR
          value: "${CAMUNDA_DATABASE_SERVICE_NAME}:{{ .Values.database_port }}"
        - name: CAMUNDA_JDBC_USER
          valueFrom:
            configMapKeyRef:
              key: DATABASE_USER
              name: "{{ .Values.camunda_db_resource_name }}-{{ .Values.image_tag }}-config"
        - name: CAMUNDA_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DATABASE_PASSWORD
              name: "{{ .Values.camunda_db_resource_name }}-{{ .Values.image_tag }}-secret"
        - name: KEYCLOAK_URL
          value: "{{ .Values.keycloak_url }}"
        - name: KEYCLOAK_URL_REALM
          valueFrom:
            secretKeyRef:
              key: KEYCLOAK_REALM
              name: "{{ .Values.formsflow_secret }}"
        - name: KEYCLOAK_CLIENTID
          valueFrom:
            secretKeyRef:
              key: BPM_CLIENT_ID
              name: "{{ .Values.formsflow_secret }}"
        - name: KEYCLOAK_CLIENTSECRET
          valueFrom:
            secretKeyRef:
              key: BPM_CLIENT_SECRET
              name: "{{ .Values.formsflow_secret }}"
        - name: MAIL_CONFIG
          value: /app/mail-config.properties
        - name: CAMUNDA_FORMBUILDER_PIPELINE_USERNAME
          value: "{{ .Values.camunda_formbuilder_pipeline_username }}"
        - name: CAMUNDA_FORMBUILDER_PIPELINE_PASSWORD
          value: "{{ .Values.camunda_formbuilder_pipeline_password }}"
        - name: CAMUNDA_FORMBUILDER_PIPELINE_BPM_URL
          valueFrom:
            configMapKeyRef:
              key: CAMUNDA_API_URI
              name: "{{ .Values.formsflow_config_name }}-config"
        - name: CAMUNDA_HIKARI_CONN_TIMEOUT
          value: "{{ .Values.camunda_hikari_connection_timeout }}"
        - name: CAMUNDA_HIKARI_IDLE_TIMEOUT
          value: "{{ .Values.camunda_hik_idle_timeout }}"
        - name: CAMUNDA_HIKARI_MAX_POOLSIZE
          value: "{{ .Values.camunda_hikari_maximum_poolsize }}"
        - name: CAMUNDA_HIKARI_VALID_TIMEOUT
          value: "{{ .Values.hikari_valid_timeout }}"
        - name: CAMUNDA_ANALYTICS_DATABASE_SERVICE_NAME
          value: "{{ .Values.analytics_db_resource_name }}-{{ .Values.image_tag }}"
        - name: CAMUNDA_ANALYTICS_DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              key: DATABASE_NAME
              name: "{{ .Values.analytics_db_resource_name }}-{{ .Values.image_tag }}-config"
        - name: CAMUNDA_BPM_HISTORY_LEVEL
          value: none
        - name: CAMUNDA_AUTHORIZATION_FLAG
          value: "true"
        - name: CAMUNDA_AUTHORIZATION_REVOKE_CHECK_FLAG
          value: auto
        - name: CAMUNDA_APP_ROOT_LOG_FLAG
          value: "{{ .Values.camunda_app_root_log_flag }}"
        - name: FORMSFLOW_API_URL
          value: "https://{{ .Values.web_api_url }}"
        - name: FORMIO_URL
          value: "https://{{ .Values.forms_url }}"
        - name: FORMIO_ROOT_EMAIL
          valueFrom:
            secretKeyRef:
              key: FORMIO_ROOT_EMAIL
              name: "{{ .Values.formsflow_secret }}"
        - name: FORMIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: FORMIO_ROOT_PASSWORD
              name: "{{ .Values.formsflow_secret }}"
        - name: WEBSOCKET_ENCRYPT_KEY
          value: "{{ .Values.websocket_encrypt_key }}"
        - name: WEBSOCKET_MESSAGE_TYPE
          value: "{{ .Values.websocket_message_type }}"
        - name: WEBSOCKET_SECURITY_ORIGIN
          value: "{{ .Values.websocket_security_origin }}"
        image: "image-registry.openshift-image-registry.svc:5000/{{ .Release.Namespace }}/{{ .Values.name }}"
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /camunda/actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: "{{ .Values.name }}"
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /camunda/actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 3
            memory: 5Gi
          requests:
            cpu: 1
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/mail-config.properties
          name: "{{ .Values.name }}-mail-config"
          subPath: mail-config.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: mail-config.properties
            path: mail-config.properties
          name: "{{ .Values.name }}-mail-config"
        name: "{{ .Values.name }}-mail-config"
