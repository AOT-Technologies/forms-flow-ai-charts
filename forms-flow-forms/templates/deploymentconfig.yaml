apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    app: {{ .Values.name }}
  strategy:
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - env:
        - name: DEBUG
          value: formio:*
        - name: NODE_CONFIG
          valueFrom:
            secretKeyRef:
              key: NODE_CONFIG
              name: {{ .Values.mongodb_secret_name }}
        - name: ROOT_EMAIL
          valueFrom:
            secretKeyRef:
              key: FORMIO_ROOT_EMAIL
              name: {{ .Values.formsflow_secret }}
        - name: ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: FORMIO_ROOT_PASSWORD
              name: {{ .Values.formsflow_secret }}
        image: image-registry.openshift-image-registry.svc:5000/{{ .Values.image_namespace }}/{{ .Values.name }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3001
          timeoutSeconds: 1
        name: {{ .Values.name }}
        ports:
        - containerPort: 3001
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3001
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ .Values.cpu_limit }}
            memory: {{ .Values.memory_limit }}
          requests:
            cpu: {{ .Values.cpu_request }}
            memory: {{ .Values.memory_request }}
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
