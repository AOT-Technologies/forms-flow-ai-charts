---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
      annotations:
        {{- if (include "forms-flow-data-analysis.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "forms-flow-data-analysis.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "forms-flow-data-analysis.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: forms-flow-data-analysis
          image: {{ include "forms-flow-data-analysis.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          env:
          - name: OPENAI_API_KEY
            valueFrom:
              configMapKeyRef:
                key: OPENAI_API_KEY
                name: "{{ .Chart.Name }}"
          - name: CHAT_BOT_MODEL_ID
            valueFrom:
              configMapKeyRef:
                key: CHAT_BOT_MODEL_ID
                name: "{{ .Chart.Name }}"
          - name: KEYCLOAK_URL
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_URL
                name: "{{ .Values.formsflow.configmap }}"
          - name: KEYCLOAK_URL_REALM
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_URL_REALM
                name: "{{ .Values.formsflow.configmap }}"        
          - name: KEYCLOAK_WEB_CLIENT_ID
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_WEB_CLIENT_ID
                name: "{{ .Chart.Name }}" 
          - name: DATA_ANALYSIS_API_BASE_URL
            valueFrom:
              configMapKeyRef:
                key: DATA_ANALYSIS_SERVICE_URL
                name: "{{ .Values.formsflow.configmap }}"
          - name: JWT_OIDC_ALGORITHMS
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_JWT_OIDC_ALGORITHMS
                name: "{{ .Values.formsflow.configmap }}"
          - name: JWT_OIDC_AUDIENCE
            valueFrom:
              secretKeyRef:
                key: ADMIN_WEB_CLIENTID
                name: "{{ .Values.formsflow.secret }}"
          - name: JWT_OIDC_CACHING_ENABLED
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_JWT_OIDC_CACHING_ENABLED
                name: "{{ .Values.formsflow.configmap }}"
          - name: JWT_OIDC_ISSUER
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_JWT_OIDC_ISSUER
                name: "{{ .Values.formsflow.configmap }}"
          - name: JWT_OIDC_JWKS_CACHE_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_JWT_OIDC_JWKS_CACHE_TIMEOUT
                name: "{{ .Values.formsflow.configmap }}"
          - name: JWT_OIDC_JWKS_URI
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_JWT_OIDC_JWKS_URI
                name: "{{ .Values.formsflow.configmap }}"
          - name: JWT_OIDC_WELL_KNOWN_CONFIG
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_JWT_OIDC_CONFIG
                name: "{{ .Values.formsflow.configmap }}"
          - name: DATABASE_SUPPORT
            valueFrom:
              configMapKeyRef:
                key: DATABASE_SUPPORT
                name: "{{ .Chart.Name }}"
          - name: MODEL_ID
            valueFrom:
              configMapKeyRef:
                key: MODEL_ID
                name: "{{ .Values.formsflow.configmap }}"
          - name: KEYCLOAK_URL_HTTP_RELATIVE_PATH
            valueFrom:
              configMapKeyRef:
                key: KEYCLOAK_URL_HTTP_RELATIVE_PATH
                name: "{{ .Values.formsflow.configmap }}"
          {{- if .Values.extraEnvVars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
          {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          ports:
          - name: http
            containerPort: {{ .Values.containerPorts.http }}
            protocol: TCP
          stdin: true
          tty: true
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts: 
          - name: data-analysis-logs
            mountPath: /forms-flow-data-analysis/app/logs    
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.sidecars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
            {{- end }}
        - name: nginx
          image: {{ include "forms-flow-data-analysis.nginx.image" . }}
          ports:
            - containerPort: {{ .Values.ingress.servicePort }}
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
      - name: data-analysis-logs
        emptyDir: {}     
      - name: nginx-config-volume
        configMap:
          name: forms-flow-data-analysis-nginx-config       
      {{- if .Values.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: Always