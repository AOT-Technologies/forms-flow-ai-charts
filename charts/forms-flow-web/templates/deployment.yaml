apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: forms-flow-web
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/template-configmap.yaml") . | sha256sum }}
        {{- if (include "forms-flow-web.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "forms-flow-web.serviceAccountName" . }}
      {{- include "forms-flow-web.imagePullSecrets" . | nindent 6 }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "jenkins-controller" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "jenkins-controller" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: forms-flow-web
          image: {{ include "forms-flow-web.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  key: NODE_ENV
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_ENABLE_CHATBOT
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_CHATBOT
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_CHATBOT_URL
              valueFrom:
                configMapKeyRef:
                  key: CHATBOT_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_ENABLE_LOW_CODE_DESIGNER
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_LOW_CODE_DESIGNER
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_API_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  key: FORMIO_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_API_PROJECT_URL
              valueFrom:
                configMapKeyRef:
                  key: FORMIO_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_BPM_URL
              valueFrom:
                configMapKeyRef:
                  key: BPM_API_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_KEYCLOAK_CLIENT
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_CLIENT
                  name: "{{ .Chart.Name }}"
            - name: REACT_APP_WEB_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: WEB_API_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_APPLICATION_NAME
              valueFrom:
                configMapKeyRef:
                  key: APPLICATION_NAME
                  name: "{{ .Chart.Name }}"
            - name: REACT_APP_USER_ACCESS_PERMISSIONS
              valueFrom:
                configMapKeyRef:
                  key: USER_ACCESS_PERMISSIONS
                  name: "{{ .Chart.Name }}"
            - name: REACT_APP_WEBSOCKET_ENCRYPT_KEY
              valueFrom:
                secretKeyRef:
                  key: WEBSOCKET_ENCRYPT_KEY
                  name: "{{ .Values.formsflow.secret }}"
            - name: REACT_APP_KEYCLOAK_URL_REALM
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_URL_REALM
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_KEYCLOAK_URL
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_FORMIO_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: FORMIO_JWT_SECRET
                  name: "{{ .Values.formsflow.secret }}"
            - name: REACT_APP_MT_ADMIN_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: FORMSFLOW_ADMIN_BASE
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_MULTI_TENANCY_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: MULTI_TENANCY_ENABLED
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_KEYCLOAK_ENABLE_CLIENT_AUTH
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_ENABLE_CLIENT_AUTH
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_CUSTOM_SUBMISSION_URL
              valueFrom:
                configMapKeyRef:
                  key: CUSTOM_SUBMISSION_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_CUSTOM_SUBMISSION_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: CUSTOM_SUBMISSION_ENABLED
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_DOCUMENT_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  key: FORMSFLOW_DOC_API_URL
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_DRAFT_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: DRAFT_ENABLED
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_DRAFT_POLLING_RATE
              valueFrom:
                configMapKeyRef:
                  key: DRAFT_POLLING_RATE
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_EXPORT_PDF_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: EXPORT_PDF_ENABLED
                  name: "{{ .Values.formsflow.configmap }}"
            - name: REACT_APP_PUBLIC_WORKFLOW_ENABLED
              valueFrom:
                configMapKeyRef:
                  key: PUBLIC_WORKFLOW_ENABLED
                  name: "{{ .Chart.Name }}"
            - name: REACT_APP_OPENTELEMETRY_SERVICE
              valueFrom:
                configMapKeyRef:
                  key: OPENTELEMETRY_SERVICE
                  name: "{{ .Chart.Name }}"
            - name: REACT_APP_WEB_BASE_CUSTOM_URL
              valueFrom:
                configMapKeyRef:
                  key: WEB_BASE_CUSTOM_URL
                  name: "{{ .Chart.Name }}"
            - name: CUSTOM_THEME_URL
              valueFrom:
                configMapKeyRef:
                  key: CUSTOM_THEME_URL
                  name: "{{ .Chart.Name }}"
            - name: ENABLE_FORMS_MODULE
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_FORMS_MODULE
                  name: "{{ .Chart.Name }}"
            - name: ENABLE_TASKS_MODULE
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_TASKS_MODULE
                  name: "{{ .Chart.Name }}"
            - name: ENABLE_DASHBOARDS_MODULE
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_DASHBOARDS_MODULE
                  name: "{{ .Chart.Name }}"
            - name: ENABLE_PROCESSES_MODULE
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_PROCESSES_MODULE
                  name: "{{ .Chart.Name }}"        
            - name: ENABLE_APPLICATIONS_MODULE
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_APPLICATIONS_MODULE
                  name: "{{ .Chart.Name }}"
            - name: KEYCLOAK_URL_HTTP_RELATIVE_PATH
              valueFrom:
                configMapKeyRef:
                  key: KEYCLOAK_URL_HTTP_RELATIVE_PATH
                  name: "{{ .Values.formsflow.configmap }}"
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          ports:
          - name: http
            containerPort: {{ .Values.containerPorts.http }}
            protocol: TCP
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          tty: true
          volumeMounts:
          - name: tmpfs
            mountPath: {{.Values.config_path}}
          - name: forms-flow-web-template-configuration
            mountPath: /tmp/forms-flow-web-config.template
            readOnly: true   
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
      - name: forms-flow-web-template-configuration
        configMap:
          name: forms-flow-web-template-configuration
          defaultMode: 420
      - name: tmpfs
        emptyDir: {}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      restartPolicy: Always