---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ printf "%s-server" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.server.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: forms-flow-analytics-server
  {{- if .Values.server.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.server.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.server.updateStrategy "context" $ ) | nindent 4 }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.server.podLabels .Values.server.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: forms-flow-analytics-server
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: forms-flow-analytics-server
      annotations:
        {{- if not .Values.server.existingSecret  }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- end }}
        {{- if (include "forms-flow-analytics.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.server.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.server.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "forms-flow-analytics.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "forms-flow-analytics.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.server.automountServiceAccountToken }}
      {{- if .Values.server.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.server.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.server.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.server.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.server.podAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.server.podAntiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.server.nodeAffinityPreset.type "key" .Values.server.nodeAffinityPreset.key "values" .Values.server.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.server.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.server.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.server.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.server.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.server.schedulerName }}
      schedulerName: {{ .Values.server.schedulerName }}
      {{- end }}
      {{- if .Values.server.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.server.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.server.priorityClassName }}
      priorityClassName: {{ .Values.server.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.server.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.server.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.server.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.server.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      containers:
      - name: forms-flow-analytics-server
        image: {{ include "forms-flow-analytics.image" . }}
        imagePullPolicy: {{ .Values.server.image.pullPolicy | quote }}
        {{- if .Values.server.containerSecurityContext.enabled }}
        securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.server.containerSecurityContext "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.server.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.server.diagnosticMode.command "context" $) | nindent 12 }}
        {{- else if .Values.server.command }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.server.command "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.server.diagnosticMode.enabled }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.server.diagnosticMode.args "context" $) | nindent 12 }}
        {{- else if .Values.server.args }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.server.args "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.server.lifecycleHooks }}
        lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.server.lifecycleHooks "context" $) | nindent 12 }}
        {{- end }}
        env:
          {{- $secretName := .Values.ExternalDatabase.ExistingSecretName | default .Chart.Name }}
          {{- $configmapName := .Values.ExternalDatabase.ExistingConfigmapName | default .Chart.Name }}
          {{- with .Values.ExternalDatabase }}
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                key: {{ .ExistingDatabaseNameKey | default "DATABASE_NAME" }}
                name: "{{ $secretName }}"
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: {{ .ExistingDatabasePasswordKey | default "DATABASE_PASSWORD" }}
                name: "{{ $secretName }}"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: {{ .ExistingDatabaseUserNameKey | default "DATABASE_USERNAME" }}
                name: "{{ $secretName }}"
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: {{ .ExistingDatabasePortKey | default "DATABASE_PORT" }}
                name: "{{ $configmapName }}"
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                key: {{ .ExistingDatabaseHostKey | default "DATABASE_HOST" }}
                name: "{{ $configmapName }}"
          {{- end }}
          - name: REDASH_WEB_WORKERS
            value: "4"
          - name: GUNICORN_CMD_ARGS
            value: "--timeout 300"
          - name: REDASH_MULTI_ORG
            valueFrom:
              secretKeyRef:
                key: REDASH_MULTI_ORG
                name: "{{ .Chart.Name }}"
        {{- if .Values.server.extraEnvVars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.server.extraEnvVars "context" $) | nindent 12 }}
        {{- end }}
        envFrom:
        {{- if .Values.server.extraEnvVarsCM }}
        - configMapRef:
            name: {{ include "common.tplvalues.render" (dict "value" .Values.server.extraEnvVarsCM "context" $) }}
        {{- else}}
        - configMapRef:
            name: {{ include "common.names.fullname" . }}
        {{- end }}
        {{- if .Values.server.extraEnvVarsSecret }}
        - secretRef:
            name: {{ include "common.tplvalues.render" (dict "value" .Values.server.extraEnvVarsSecret "context" $) }}
        {{- else}}
        - secretRef:
            name: {{ include "common.names.fullname" . }}
        {{- end }}
        {{- if .Values.server.resources }}
        resources: {{- toYaml .Values.server.resources | nindent 12 }}
        {{- else if ne .Values.server.resourcesPreset "none" }}
        resources: {{- include "common.resources.preset" (dict "type" .Values.server.resourcesPreset) | nindent 12 }}
        {{- end }}
        {{- if not .Values.server.diagnosticMode.enabled }}
        {{- if .Values.server.customLivenessProbe }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.server.customLivenessProbe "context" $) | nindent 12 }}
        {{- else if .Values.server.livenessProbe.enabled }}
        livenessProbe:
          failureThreshold: {{ .Values.server.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.server.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.server.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.server.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.server.livenessProbe.timeoutSeconds }}
          httpGet:
            path: /ping
            port: 5000
        {{- end }}
        {{- if .Values.server.customReadinessProbe }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.server.customReadinessProbe "context" $) | nindent 12 }}
        {{- else if .Values.server.readinessProbe.enabled }}
        readinessProbe:
          failureThreshold: {{ .Values.server.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.server.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.server.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.server.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.server.readinessProbe.timeoutSeconds }}
          httpGet:
            path: /ping
            port: 5000
        {{- end }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.server.containerPorts.http }}
          protocol: TCP
        volumeMounts:
          {{- if .Values.server.extraVolumeMounts }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.server.extraVolumeMounts "context" $ ) | nindent 12 }}
          {{- end }}
        {{- if .Values.server.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.server.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
      {{- if .Values.server.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.server.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: Always