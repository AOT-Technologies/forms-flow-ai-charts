---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
      annotations:
        {{- if (include "forms-flow-forms.createConfigmap" .) }}
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "forms-flow-forms.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "forms-flow-forms.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- if .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      containers:
      - name: forms-flow-forms
        image: {{ include "forms-flow-forms.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        {{- if .Values.containerSecurityContext.enabled }}
        securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
        {{- else if .Values.command }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.diagnosticMode.enabled }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
        {{- else if .Values.args }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.lifecycleHooks }}
        lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
        {{- end }}
        env:
        - name: NODE_CONFIG
          valueFrom:
            configMapKeyRef:
              key: NODE_CONFIG
              name: "{{ .Values.formsflow.configmap }}"
        {{- if .Values.ExternalAuth.ExistingMailAuthKey }}
        - name: ROOT_EMAIL
          valueFrom:
            secretKeyRef:
              key: {{ .Values.ExternalAuth.ExistingMailAuthKey }}
              name: "{{ .Values.ExternalAuth.ExistingSecretName }}"
        {{- end }}
        {{- if not .Values.ExternalAuth.ExistingMailAuthKey }}
        - name: ROOT_EMAIL
          valueFrom:
            secretKeyRef:
              key: FORMIO_ROOT_EMAIL
              name: "{{ .Values.formsflow.secret }}"
        {{- end }}
        {{- if .Values.ExternalAuth.ExistingPwdAuthKey }}
        - name: ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: {{ .Values.ExternalAuth.ExistingPwdAuthKey }}
              name: "{{ .Values.ExternalAuth.ExistingSecretName }}"
        {{- end }}
        {{- if not .Values.ExternalAuth.ExistingPwdAuthKey }}
        - name: ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: FORMIO_ROOT_PASSWORD
              name: "{{ .Values.formsflow.secret }}"
        {{- end }}
        - name: FORMIO_JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: FORMIO_JWT_SECRET
              name: "{{ .Values.formsflow.secret }}"
        - name: FORMIO_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: FORMIO_DOMAIN
              name: "{{ .Values.formsflow.configmap }}"
        - name: MULTI_TENANCY_ENABLED
          valueFrom:
            configMapKeyRef:
              key: MULTI_TENANCY_ENABLED
              name: "{{ .Values.formsflow.configmap }}"
        {{- if .Values.extraEnvVars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
        {{- end }}
        envFrom:
        {{- if .Values.extraEnvVarsCM }}
        - configMapRef:
            name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
        {{- end }}
        {{- if .Values.extraEnvVarsSecret }}
        - secretRef:
            name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
        {{- end }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
        {{- else if ne .Values.resourcesPreset "none" }}
        resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.containerPorts.http }}
          protocol: TCP
        {{- if not .Values.diagnosticMode.enabled }}
        {{- if .Values.customLivenessProbe }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
        {{- else if .Values.livenessProbe.enabled }}
        livenessProbe:
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          tcpSocket:
            port: 3001
        {{- end }}
        {{- if .Values.customReadinessProbe }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
        {{- else if .Values.readinessProbe.enabled }}
        readinessProbe:
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          tcpSocket:
            port: 3001
        {{- end }}
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        stdin: true   
        volumeMounts:
        - name: forms-logs
          mountPath: /app/logs     
          {{- if .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $ ) | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
      - name: forms-logs
        emptyDir: {}
      {{- if .Values.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: Always