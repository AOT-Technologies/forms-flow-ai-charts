Domain: "apps.devops.aot-technologies.com"
camunda:
  analytics:
    database: forms-flow-analytics-postgresql
  auth:
    enabled: true
    revokeCheck: auto
  database:
    port: 5432
  historyLevel: auto
  securityOrigin: '*'
  logLevel: INFO
  formBuilder:
    password: demo # CAMUNDA_FORMBUILDER_PIPELINE_PASSWORD
    username: demo # CAMUNDA_FORMBUILDER_PIPELINE_USERNAME
  hikari:
    timeout:
      connection: 30000 #CAMUNDA_HIKARI_CONNECTION_TIMEOUT
      idle: 600000 #CAMUNDA_HIKARI_IDLE_TIMEOUT
      valid: 5000 #CAMUNDA_HIKARI_VALID_TIMEOUT
    poolsize:
      max: 10 #CAMUNDA_HIKARI_MAX_POOLSIZE
  jdbc:
    driver: org.postgresql.Driver
    url: "jdbc:postgresql://${CAMUNDA_DATABASE_SERVICE_NAME}:${CAMUNDA_DATABASE_PORT}/${CAMUNDA_DATABASE_NAME}"
  websocket:
    messageType: TASK_EVENT #WEBSOCKET_MESSAGE_TYPE
    securityOrigin: "https://*.gitops.aot-technologies.com" #WEBSOCKET_SECURITY_ORIGIN

image:
  registry: docker.io
  repository: formsflow/forms-flow-bpm
  tag: v4.0.6-alpha #The image tag to pull from

formsflow:
  configmap: forms-flow-ai # name of formsflow.ai configmap
  secret: forms-flow-ai #name of formsflow.ai secret 

ingress: 
  enabled: true # create an ingress for this component 
  port: 8080
mail:
  from: support@aot-technologies.com
  password: YwJaMyhmHbBg0cp6
  user: support@aot-technologies.com
  smtp:
    port: 587
    server: smtp-relay.sendinblue.com

postgresql:
  auth:
    database: forms-flow-bpm # Name for custom database to create
    postgresPassword: postgres # Password for the "postgres" admin user
    password: forms-flow-bpm  # Password for the custom user to create
    username: forms-flow-bpm  # Name for a custom user to create
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 14.2.0-debian-10-r57
  fullnameOverride: "forms-flow-bpm-postgresql"
  primary:
    containerSecurityContext:
      enabled: false
    persistence:
      mountPath: /var/lib/pgsql/data
      storageClass: nfs-client 
      size: 1Gi 
    podSecurityContext:
      enabled: false
    service:
      ports:
        postgresql: 5432  # PostgreSQL service port
    shmVolume:
      chmod:
        enabled: false
  volumePermissions:
    containerSecurityContext:
      runAsUser: "auto"

resources:
  limits:
    cpu: 600m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

waitFor: "${CAMUNDA_DATABASE_SERVICE_NAME}:${CAMUNDA_DATABASE_PORT}"
