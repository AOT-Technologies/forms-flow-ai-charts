
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-mail-configuration" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: forms-flow-bpm
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  mail-config.properties: |
    # send mails via SMTP
    mail.transport.protocol={{.Values.mail.protocol}}
    mail.smtp.auth={{.Values.mail.smtp.auth}}
    mail.smtp.host={{.Values.mail.smtp.server}}
    mail.smtp.port={{.Values.mail.smtp.port}}
    mail.smtp.ssl.enable={{.Values.mail.smtp.ssl.enable}}
    mail.smtp.socketFactory.port={{.Values.mail.smtp.socketFactory.port}}
    mail.smtp.socketFactory.class={{.Values.mail.smtp.socketFactory.class}}
    # poll mails via IMAPS
    #mail.store.protocol={{.Values.mail.store.protocol}}
    # mail.imaps.host={{.Values.mail.imaps.host}}
    mail.imaps.port={{.Values.mail.imaps.port}} 
    mail.imaps.timeout={{.Values.mail.imaps.timeout}}
    # additional config
    #mail.poll.folder={{.Values.mail.folder}}
    mail.sender={{.Values.mail.from}}
    mail.sender.alias={{.Values.mail.alias}}
    mail.attachment.download={{.Values.mail.attachment.download}}
    mail.attachment.path={{.Values.mail.attachment.path}}
    # credentials
    mail.user={{.Values.mail.user}}
    mail.password={{.Values.mail.password}}