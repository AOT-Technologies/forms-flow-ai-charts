apiVersion: v1
kind: Service
metadata:
  name: {{ include "forms-flow-ai.redisExporter.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  {{- $versionLabel := dict "app.kubernetes.io/version" ( include "common.images.version" ( dict "imageRoot" .Values.redisExporter.image "chart" .Chart ) ) }}
  {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.redisExporter.serviceLabels .Values.commonLabels $versionLabel ) "context" . ) }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
    app.kubernetes.io/name: redis-exporter  
  {{- if  .Values.redisExporter.serviceAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.redisExporter.serviceAnnotations .Values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.redisExporter.service.type }}
  {{- if or (eq .Values.redisExporter.service.type "LoadBalancer") (eq .Values.redisExporter.service.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.redisExporter.service.externalTrafficPolicy | quote }}
  {{- end }}
  {{- if (semverCompare ">=1.22-0" (include "common.capabilities.kubeVersion" .)) }}
  internalTrafficPolicy: {{ .Values.redisExporter.service.internalTrafficPolicy }}
  {{- end }}
  {{- if and (eq .Values.redisExporter.service.type "LoadBalancer") (not (empty .Values.redisExporter.service.loadBalancerIP)) }}
  loadBalancerIP: {{ .Values.redisExporter.service.loadBalancerIP }}
  {{- end }}
  {{- if and (eq .Values.redisExporter.service.type "LoadBalancer")  .Values.redisExporter.service.loadBalancerClass }}
  loadBalancerClass: {{ .Values.redisExporter.service.loadBalancerClass }}
  {{- end }}
  {{- if and (eq .Values.redisExporter.service.type "LoadBalancer") (not (empty .Values.redisExporter.service.loadBalancerSourceRanges)) }}
  loadBalancerSourceRanges: {{ toYaml .Values.redisExporter.service.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
  {{- if and .Values.redisExporter.service.clusterIP (eq .Values.redisExporter.service.type "ClusterIP") }}
  clusterIP: {{ .Values.redisExporter.service.clusterIP }}
  {{- end }}
  {{- if .Values.redisExporter.service.sessionAffinity }}
  sessionAffinity: {{ .Values.redisExporter.service.sessionAffinity }}
  {{- end }}
  {{- if .Values.redisExporter.service.sessionAffinityConfig }}
  sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .Values.redisExporter.service.sessionAffinityConfig "context" $) | nindent 4 }}
  {{- end }}
  {{- if .Values.redisExporter.service.externalIPs }}
  externalIPs: {{- include "common.tplvalues.render" (dict "value" .Values.redisExporter.service.externalIPs "context" $) | nindent 4 }}
  {{- end }}
  ports:
  - name: {{ .Values.redisExporter.service.portNames.redis }}
    port: {{ .Values.redisExporter.service.ports.redis }}
    targetPort: 6379
  - name: {{ .Values.redisExporter.service.portNames.redis2 }}
    port: {{ .Values.redisExporter.service.ports.redis2 }}
    targetPort: 16379  
    {{- if and (or (eq .Values.redisExporter.service.type "NodePort") (eq .Values.redisExporter.service.type "LoadBalancer")) .Values.redisExporter.service.nodePorts.redis}}
    nodePort: {{ .Values.redisExporter.service.nodePorts.redis}}
    {{- else if eq .Values.redisExporter.service.type "ClusterIP" }}
    nodePort: null
    {{- end }}
  {{- if .Values.redisExporter.service.extraPorts }}
  {{- include "common.tplvalues.render" (dict "value" .Values.redisExporter.service.extraPorts "context" $) | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.redisExporter.podLabels .Values.commonLabels ) "context" . ) }}
  selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/name: redis-exporter
