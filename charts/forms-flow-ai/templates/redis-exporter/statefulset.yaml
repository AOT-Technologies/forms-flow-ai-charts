---
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "forms-flow-ai.redisExporter.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/name: redis-exporter
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ template "forms-flow-ai.redisExporter.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/name: redis-exporter
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/name: redis-exporter
    spec:
      containers:
      - name: redis
        image: {{ include "forms-flow-ai.redisExporter.image" . }}
        imagePullPolicy: {{ .Values.redisExporter.image.pullPolicy | quote }}
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP  
          {{- if .Values.redisExporter.extraEnvVars }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.redisExporter.extraEnvVars "context" $ ) | nindent 10 }}
          {{- end }}
        {{- if or .Values.redisExporter.extraEnvVarsCM .Values.redisExporter.extraEnvVarsSecret }}
        envFrom:
          {{- if .Values.redisExporter.extraEnvVarsCM }}
          - configMapRef:
              name: {{ include "common.tplvalues.render" ( dict "value" .Values.redisExporter.extraEnvVarsCM "context" $ ) }}
          {{- end }}
          {{- if .Values.redisExporter.extraEnvVarsSecret }}
          - secretRef:
              name: {{ include "common.tplvalues.render" ( dict "value" .Values.redisExporter.extraEnvVarsSecret "context" $ ) }}
          {{- end }}
        {{- end }}       
        ports:
        - containerPort: {{ .Values.redisExporter.containerPorts.client }}
          name: client
        - containerPort: {{ .Values.redisExporter.containerPorts.gossip }}
          name: gossip
        {{- if .Values.redisExporter.resources }}
        resources: 
          {{- toYaml .Values.redisExporter.resources | nindent 12 }}
        {{- else if ne .Values.redisExporter.resourcesPreset "none" }}
        resources: 
          {{- include "common.resources.preset" (dict "type" .Values.redisExporter.resourcesPreset) | nindent 12 }}
        {{- end }}
        {{- if .Values.redisExporter.customLivenessProbe }}
        livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.redisExporter.customLivenessProbe "context" $) | nindent 12 }}
        {{- else if .Values.redisExporter.livenessProbe.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.redisExporter.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.redisExporter.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ add1 .Values.redisExporter.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.redisExporter.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.redisExporter.livenessProbe.failureThreshold }}
          tcpSocket:
            port: client
        {{- end }}
        {{- if .Values.redisExporter.customReadinessProbe }}
        readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.redisExporter.customReadinessProbe "context" $) | nindent 12 }}
        {{- else if .Values.redisExporter.readinessProbe.enabled }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.redisExporter.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.redisExporter.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ add1 .Values.redisExporter.readinessProbe.timeoutSeconds }}
          exec:
            command:
              - redis-cli
              - ping
        {{- end }}     
        volumeMounts:
        - mountPath: /conf
          name: conf
          readOnly: true
        - mountPath: /data
          name: redis-data
          readOnly: false
        {{- if .Values.redisExporter.extraVolumeMounts }}
        {{- include "common.tplvalues.render" (dict "value" .Values.redisExporter.extraVolumeMounts "context" $) | nindent 12 }}
        {{- end }}
      {{- if .Values.redisExporter.sidecars }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.redisExporter.sidecars "context" $) | nindent 8 }}
      {{- end }}
      volumes:
      - configMap:
          defaultMode: 0555
          name: redis-exporter
        name: conf
      {{- if .Values.redisExporter.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.redisExporter.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
  {{- if .Values.redisExporter.persistence.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: redis-data
        labels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 10 }}
          app.kubernetes.io/component: redis-exporter
        {{- if .Values.redisExporter.persistence.annotations }}
        annotations: {{- toYaml .Values.redisExporter.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        storageClassName: {{ .Values.redisExporter.persistence.storageClass }}
        accessModes:
        {{- range .Values.redisExporter.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.redisExporter.persistence.size | quote }}
        {{- if .Values.redisExporter.persistence.selector }}
        selector: {{- include "common.tplvalues.render" ( dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
        {{- end }}
  {{- end }}
