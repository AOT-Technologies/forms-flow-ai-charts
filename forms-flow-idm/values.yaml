---
keycloak:
  extraEnv: |
    - name: KEYCLOAK_IMPORT
      value: "/realm/realm.json"
    - name: KEYCLOAK_PASSWORD
      value: admin
    - name: KEYCLOAK_USER
      value: admin
    - name: JAVA_OPTS 
      value: >-
        -Dkeycloak.profile.feature.scripts=enabled
        -Dkeycloak.profile.feature.upload_scripts=enabled

  extraVolumes: |
    - name: "forms-flow-idm-realm-config"
      configMap:
        name: "forms-flow-idm" 

  extraVolumeMounts: |
    - name: "forms-flow-idm-realm-config"
      mountPath: "/realm/"
      readOnly: true
    
  # Docker image used to check Postgresql readiness at startup 
  pgchecker:
    securityContext:
      capabilities: {}
      privileged: false

  podSecurityContext: 
    enabled: false
  
## "auto" is especially useful for OpenShift which has scc with dynamic userids (and 0 is not allowed).
## You may want to use this volumePermissions.securityContext.runAsUser="auto" in combination with
## pod securityContext.enabled=false and shmVolume.chmod.enabled=false
  postgresql:
    containerSecurityContext:
        enabled: false
    persistence:
      enabled: false
    securityContext:
      enabled: false 
    shmVolume:
      chmod:
        enabled: false
    ## @param volumePermissions.enabled Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work)
    volumePermissions:
      enabled: true
      securityContext:
        runAsUser: "auto"
  
  route:
    enabled: true
    path:  /
    labels: {"app":"forms-flow-idm"}
    host: "formsflow.idm.{{ .Release.Namespace }}.apps.devops.aot-technologies.com"
    tls:
      enabled: true
      insecureEdgeTerminationPolicy: Allow
      termination: edge
  
  # SecurityContext for the Keycloak container
  securityContext:
    capabilities: {}
    privileged: false
  
name: forms-flow-idm
